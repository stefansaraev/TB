#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-only

usage() {
  echo "  usage: '$0 -l' to list packages"
  echo "  usage: '$0 -c' to check for updates"
  echo "         '$0 -a' to update all packagegs"
  echo "         '$0 [-l|-c] path/to/package.mk"
}

if [ -z "$1" ] ; then
  usage
  exit 0
fi

case "$1" in
  -*)
    if [ -n "$2" ] ; then
      PKGS="$2"
    else
      PKGS="$(find packages -type f -name package.mk | sort)"
    fi
    for i in $PKGS; do
      PKG_SITE=""
      PKG_URL=""
      . $i
      if egrep -q '^PKG_SITE="https://github.com(.*)/tree/' $i 2>/dev/null ; then
        CHECK=0
        if [ "$1" == "-c" ] ; then
          CHECK=1
        fi
        if [ "$1" == "-l" ] ; then
          printf "* %-32s %-6s %s\n" $PKG_NAME $PKG_SITE
        else
          $0 $i $CHECK
        fi
      fi
    done
    exit 0
    ;;
esac

. config/options

# set AUTH_TOKEN="xxxxxxxxxxxxxxx" in .work/github-token

if [ -f .work/github-token ] ; then
  . .work/github-token
fi

if [ -f "$1" ] ; then
  REV=""
  PKG_NAME=""
  PKG_VERSION=""

  . $1

  REPO_NAME="$(grep 'PKG_SITE="https://github.com' $1 | \
    awk -F'"' '{print $2}' | \
    awk -F'/tree' '{print $1}' | \
    sed 's|https://github.com/||g')"
  BRANCH="$(grep 'PKG_SITE="https://github.com' $1 | \
    awk -F'"' '{print $2}' | \
    awk -F'tree/' '{print $2}')"
  if [ -z "$BRANCH" ] ; then
    BRANCH="master"
  fi

  REV=$(echo $(curl -H "Authorization: token $AUTH_TOKEN" \
    https://api.github.com/repos/$REPO_NAME/git/refs/heads/$BRANCH 2>/dev/null | \
    grep '"sha":' | \
    awk -F '"' '{print $4}') | cut -c1-10)

  NEEDUPD=""
  if [ ! "$PKG_VERSION" = "$REV" ] ; then
    NEEDUPD="*"
  fi
  printf "* %-32s old: %-10s new: %-10s %-10s\n" "$PKG_NAME" "$PKG_VERSION" "$REV" "$NEEDUPD"

  if [ ! "$PKG_VERSION" = "$REV" -a "$2" != "1" ] ; then
    echo "[mkpkg] Updating $1"
    sed "s|PKG_VERSION=.*|PKG_VERSION=\"$REV\"|g" -i $1
    git add $1
    git commit -m "[update] $PKG_NAME-$REV"
  fi
else
  exit 1
fi
